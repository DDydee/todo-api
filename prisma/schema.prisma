// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  email         String   @unique
  password_hash String
  role          Role     @default(USER)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  refreshToken RefreshToken?
  todo          Todo[]
}

model Todo {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  status      Status    @default(TODO)
  deadline    DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      Int
  todoTag     TodoTag[]
}

model Tag {
  id      Int       @id @default(autoincrement())
  tagName String    @unique
  todoTag TodoTag[]
}

model TodoTag {
  todo   Todo @relation(fields: [todoId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tag    Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  todoId Int
  tagId  Int

  @@id([todoId, tagId])
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  expiresAt DateTime
}

enum Role {
  USER
  ADMIN
}

enum Status {
  TODO
  IN_PROGRESS
  DONE
}